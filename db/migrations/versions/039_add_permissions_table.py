"""add permissions table

Revision ID: 039_add_permissions_table
Revises: 038_users_and_projects
Create Date: 2024-06-09 17:35:46.859002

"""

import sqlalchemy as sa
from alembic import op

import core

# revision identifiers, used by Alembic.
revision = "039_add_permissions_table"
down_revision = "038_users_and_projects"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "user_permission_junction_table",
        sa.Column("user_id", core.db.types.GUID(), nullable=False),
        sa.Column("organisation_id", core.db.types.GUID(), nullable=True),
        sa.Column("programme_id", core.db.types.GUID(), nullable=True),
        sa.Column(
            "role_name", sa.ARRAY(sa.Enum("REVIEW", "SECTION_151", "ORG_ADMIN", name="userroles")), nullable=False
        ),
        sa.Column("id", core.db.types.GUID(), nullable=False),
        sa.CheckConstraint(
            (
                "((organisation_id IS NOT NULL) OR (programme_id IS NOT NULL)) "
                "AND NOT (organisation_id IS NOT NULL and programme_id IS NOT NULL)"
            ),
            name=op.f("ck_user_permission_junction_table_ck_organisation_or_programme"),
        ),
        sa.ForeignKeyConstraint(
            ["organisation_id"],
            ["organisation_dim.id"],
            name=op.f("fk_user_permission_junction_table_organisation_id_organisation_dim"),
        ),
        sa.ForeignKeyConstraint(
            ["programme_id"],
            ["programme_dim.id"],
            name=op.f("fk_user_permission_junction_table_programme_id_programme_dim"),
        ),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"], name=op.f("fk_user_permission_junction_table_user_id_user")),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_user_permission_junction_table")),
    )
    with op.batch_alter_table("user_permission_junction_table", schema=None) as batch_op:
        batch_op.create_index(
            "ix_user_and_org",
            ["user_id", "programme_id"],
            unique=True,
            postgresql_where=sa.text("organisation_id IS NOT NULL"),
        )

    with op.batch_alter_table("user", schema=None) as batch_op:
        batch_op.add_column(sa.Column("phone_number", sa.String(), nullable=True))
        batch_op.alter_column("email_address", existing_type=sa.TEXT(), type_=sa.String(), existing_nullable=False)
        batch_op.alter_column("full_name", existing_type=sa.TEXT(), type_=sa.String(), existing_nullable=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("user", schema=None) as batch_op:
        batch_op.alter_column("full_name", existing_type=sa.String(), type_=sa.TEXT(), existing_nullable=False)
        batch_op.alter_column("email_address", existing_type=sa.String(), type_=sa.TEXT(), existing_nullable=False)
        batch_op.drop_column("phone_number")

    with op.batch_alter_table("user_permission_junction_table", schema=None) as batch_op:
        batch_op.drop_index("ix_user_and_org", postgresql_where=sa.text("organisation_id IS NOT NULL"))

    op.drop_table("user_permission_junction_table")
    # ### end Alembic commands ###
