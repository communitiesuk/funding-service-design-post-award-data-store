"""empty message

Revision ID: 011_event_data_to_jsonb
Revises: 010_programme_junction
Create Date: 2024-02-16 11:13:25.470836

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "011_event_data_to_jsonb"
down_revision = "010_programme_junction"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("project_progress", schema=None) as batch_op:
        batch_op.add_column(sa.Column("json_blob", postgresql.JSONB(astext_type=sa.Text()), nullable=True))

    op.execute(
        """
            UPDATE project_progress
            SET json_blob = jsonb_build_object(
                'delivery_status', delivery_status,
                'delivery_rag', delivery_rag,
                'spend_rag', spend_rag,
                'important_milestone', important_milestone,
                'risk_rag', risk_rag,
                'commentary', commentary,
                'delivery_stage', delivery_stage,
                'leading_factor_of_delay', leading_factor_of_delay,
                'adjustment_request_status', adjustment_request_status
            )
        """
    )

    with op.batch_alter_table("project_progress", schema=None) as batch_op:
        batch_op.drop_column("delivery_status")
        batch_op.drop_column("delivery_rag")
        batch_op.drop_column("spend_rag")
        batch_op.drop_column("important_milestone")
        batch_op.drop_column("risk_rag")
        batch_op.drop_column("commentary")
        batch_op.drop_column("delivery_stage")
        batch_op.drop_column("leading_factor_of_delay")
        batch_op.drop_column("adjustment_request_status")

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("project_progress", schema=None) as batch_op:
        batch_op.add_column(sa.Column("adjustment_request_status", sa.VARCHAR(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column("leading_factor_of_delay", sa.VARCHAR(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column("delivery_stage", sa.VARCHAR(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column("commentary", sa.VARCHAR(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column("risk_rag", sa.VARCHAR(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column("important_milestone", sa.VARCHAR(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column("spend_rag", sa.VARCHAR(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column("delivery_rag", sa.VARCHAR(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column("delivery_status", sa.VARCHAR(), autoincrement=False, nullable=True))

    op.execute(
        """
            UPDATE project_progress
            SET
                delivery_status = (json_blob ->> 'delivery_status')::VARCHAR,
                delivery_rag = (json_blob ->> 'delivery_rag')::VARCHAR,
                spend_rag = (json_blob ->> 'spend_rag')::VARCHAR,
                important_milestone = (json_blob ->> 'important_milestone')::VARCHAR,
                risk_rag = (json_blob ->> 'risk_rag')::VARCHAR,
                commentary = (json_blob ->> 'commentary')::VARCHAR,
                delivery_stage = (json_blob ->> 'delivery_stage')::VARCHAR,
                leading_factor_of_delay = (json_blob ->> 'leading_factor_of_delay')::VARCHAR,
                adjustment_request_status = (json_blob ->> 'adjustment_request_status')::VARCHAR
        """
    )

    with op.batch_alter_table("project_progress", schema=None) as batch_op:
        batch_op.drop_column("json_blob")

    # ### end Alembic commands ###
