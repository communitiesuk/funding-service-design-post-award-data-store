"""empty message

Revision ID: 006_replace_enums_with_strings
Revises: 005_relax_proj_prog_nulls
Create Date: 2023-07-03 12:10:30.753706

"""

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "006_replace_enums_with_strings"
down_revision = "005_relax_proj_prog_nulls"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("funding", schema=None) as batch_op:
        batch_op.alter_column(
            "secured",
            existing_type=postgresql.ENUM("YES", "NO", name="funding_secured"),
            type_=sa.String(),
            existing_nullable=True,
        )
        batch_op.alter_column(
            "status",
            existing_type=postgresql.ENUM("ACTUAL", "FORECAST", name="funding_status"),
            type_=sa.String(),
            existing_nullable=True,
        )

    with op.batch_alter_table("outcome_data", schema=None) as batch_op:
        batch_op.alter_column(
            "state",
            existing_type=postgresql.ENUM("ACTUAL", "FORECAST", name="outcome_data_state"),
            type_=sa.String(),
            existing_nullable=True,
        )

    with op.batch_alter_table("output_data", schema=None) as batch_op:
        batch_op.alter_column(
            "state",
            existing_type=postgresql.ENUM("ACTUAL", "FORECAST", name="output_data_state"),
            type_=sa.String(),
            existing_nullable=True,
        )

    with op.batch_alter_table("project_dim", schema=None) as batch_op:
        batch_op.alter_column(
            "location_multiplicity",
            existing_type=postgresql.ENUM("SINGLE", "MULTIPLE", name="project_location_multiplicity"),
            type_=sa.String(),
            existing_nullable=True,
        )
        batch_op.alter_column(
            "gis_provided",
            existing_type=postgresql.ENUM("YES", "NO", name="yesnoenum"),
            type_=sa.String(),
            existing_nullable=True,
        )

    with op.batch_alter_table("project_progress", schema=None) as batch_op:
        batch_op.alter_column(
            "delivery_status",
            existing_type=postgresql.ENUM(
                "NOT_YET_STARTED",
                "ONGOING_ON_TRACK",
                "ONGOING_DELAYED",
                "COMPLETED",
                "OTHER",
                name="project_progress_delivery_status",
            ),
            type_=sa.String(),
            existing_nullable=True,
        )
        batch_op.alter_column(
            "delivery_rag",
            existing_type=postgresql.ENUM("ONE", "TWO", "THREE", "FOUR", "FIVE", name="project_progress_delivery_rag"),
            type_=sa.String(),
            existing_nullable=True,
        )
        batch_op.alter_column(
            "spend_rag",
            existing_type=postgresql.ENUM("ONE", "TWO", "THREE", "FOUR", "FIVE", name="project_progress_spend_rag"),
            type_=sa.String(),
            existing_nullable=True,
        )
        batch_op.alter_column(
            "risk_rag",
            existing_type=postgresql.ENUM("ONE", "TWO", "THREE", "FOUR", "FIVE", name="project_progress_risk_rag"),
            type_=sa.String(),
            existing_nullable=True,
        )

    with op.batch_alter_table("risk_register", schema=None) as batch_op:
        batch_op.alter_column(
            "pre_mitigated_likelihood",
            existing_type=postgresql.ENUM(
                "LOW", "MEDIUM", "HIGH", "ALMOST_CERTAIN", name="risk_register_pre_mitigated_likelihood"
            ),
            type_=sa.String(),
            existing_nullable=True,
        )
        batch_op.alter_column(
            "post_mitigated_likelihood",
            existing_type=postgresql.ENUM(
                "LOW", "MEDIUM", "HIGH", "ALMOST_CERTAIN", name="risk_register_post_mitigated_likelihood"
            ),
            type_=sa.String(),
            existing_nullable=True,
        )
        batch_op.alter_column(
            "proximity",
            existing_type=postgresql.ENUM(
                "REMOTE", "DISTANT", "APPROACHING", "CLOSE", "IMMINENT", name="risk_register_proximity"
            ),
            type_=sa.String(),
            existing_nullable=True,
        )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("risk_register", schema=None) as batch_op:
        batch_op.alter_column(
            "proximity",
            existing_type=sa.String(),
            type_=postgresql.ENUM(
                "REMOTE", "DISTANT", "APPROACHING", "CLOSE", "IMMINENT", name="risk_register_proximity"
            ),
            existing_nullable=True,
        )
        batch_op.alter_column(
            "post_mitigated_likelihood",
            existing_type=sa.String(),
            type_=postgresql.ENUM(
                "LOW", "MEDIUM", "HIGH", "ALMOST_CERTAIN", name="risk_register_post_mitigated_likelihood"
            ),
            existing_nullable=True,
        )
        batch_op.alter_column(
            "pre_mitigated_likelihood",
            existing_type=sa.String(),
            type_=postgresql.ENUM(
                "LOW", "MEDIUM", "HIGH", "ALMOST_CERTAIN", name="risk_register_pre_mitigated_likelihood"
            ),
            existing_nullable=True,
        )

    with op.batch_alter_table("project_progress", schema=None) as batch_op:
        batch_op.alter_column(
            "risk_rag",
            existing_type=sa.String(),
            type_=postgresql.ENUM("ONE", "TWO", "THREE", "FOUR", "FIVE", name="project_progress_risk_rag"),
            existing_nullable=True,
        )
        batch_op.alter_column(
            "spend_rag",
            existing_type=sa.String(),
            type_=postgresql.ENUM("ONE", "TWO", "THREE", "FOUR", "FIVE", name="project_progress_spend_rag"),
            existing_nullable=True,
        )
        batch_op.alter_column(
            "delivery_rag",
            existing_type=sa.String(),
            type_=postgresql.ENUM("ONE", "TWO", "THREE", "FOUR", "FIVE", name="project_progress_delivery_rag"),
            existing_nullable=True,
        )
        batch_op.alter_column(
            "delivery_status",
            existing_type=sa.String(),
            type_=postgresql.ENUM(
                "NOT_YET_STARTED",
                "ONGOING_ON_TRACK",
                "ONGOING_DELAYED",
                "COMPLETED",
                "OTHER",
                name="project_progress_delivery_status",
            ),
            existing_nullable=True,
        )

    with op.batch_alter_table("project_dim", schema=None) as batch_op:
        batch_op.alter_column(
            "gis_provided",
            existing_type=sa.String(),
            type_=postgresql.ENUM("YES", "NO", name="yesnoenum"),
            existing_nullable=True,
        )
        batch_op.alter_column(
            "location_multiplicity",
            existing_type=sa.String(),
            type_=postgresql.ENUM("SINGLE", "MULTIPLE", name="project_location_multiplicity"),
            existing_nullable=True,
        )

    with op.batch_alter_table("output_data", schema=None) as batch_op:
        batch_op.alter_column(
            "state",
            existing_type=sa.String(),
            type_=postgresql.ENUM("ACTUAL", "FORECAST", name="output_data_state"),
            existing_nullable=True,
        )

    with op.batch_alter_table("outcome_data", schema=None) as batch_op:
        batch_op.alter_column(
            "state",
            existing_type=sa.String(),
            type_=postgresql.ENUM("ACTUAL", "FORECAST", name="outcome_data_state"),
            existing_nullable=True,
        )

    with op.batch_alter_table("funding", schema=None) as batch_op:
        batch_op.alter_column(
            "status",
            existing_type=sa.String(),
            type_=postgresql.ENUM("ACTUAL", "FORECAST", name="funding_status"),
            existing_nullable=True,
        )
        batch_op.alter_column(
            "secured",
            existing_type=sa.String(),
            type_=postgresql.ENUM("YES", "NO", name="funding_secured"),
            existing_nullable=True,
        )

    # ### end Alembic commands ###
