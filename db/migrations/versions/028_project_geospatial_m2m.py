"""empty message

Revision ID: 028_project_geospatial_m2m
Revises: 027_start_date_before_end
Create Date: 2024-03-25 09:11:41.204961

"""

import sqlalchemy as sa
from alembic import op
from sqlalchemy import orm, text

import core

# revision identifiers, used by Alembic.
revision = "028_project_geospatial_m2m"
down_revision = "027_start_date_before_end"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    connection = op.get_bind()
    session = orm.Session(bind=connection)

    op.create_table(
        "project_geospatial_association",
        sa.Column("project_id", core.db.types.GUID(), nullable=False),
        sa.Column("geospatial_id", core.db.types.GUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["geospatial_id"],
            ["geospatial_dim.id"],
            name=op.f("fk_project_geospatial_association_geospatial_id_geospatial_dim"),
            ondelete="RESTRICT",
        ),
        sa.ForeignKeyConstraint(
            ["project_id"],
            ["project_dim.id"],
            name=op.f("fk_project_geospatial_association_project_id_project_dim"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("project_id", "geospatial_id", name=op.f("pk_project_geospatial_association")),
    )

    sql_query = text(
        """
        INSERT INTO project_geospatial_association (project_id, geospatial_id)
        SELECT DISTINCT project_dim.id AS project_id, gd_longer.id AS geospatial_id
        FROM project_dim
        CROSS JOIN unnest(project_dim.postcodes) AS project_postcode(prefix)
        LEFT JOIN LATERAL (
            SELECT id
            FROM geospatial_dim
            WHERE LEFT(project_postcode.prefix, 2) = geospatial_dim.postcode_prefix
            LIMIT 1
        ) AS gd_longer ON TRUE
        LEFT JOIN LATERAL (
            SELECT id
            FROM geospatial_dim
            WHERE LEFT(project_postcode.prefix, 1) = geospatial_dim.postcode_prefix
            LIMIT 1
        ) AS gd_shorter ON TRUE
        WHERE gd_longer.id IS NOT NULL
        """
    )

    connection.execute(sql_query)
    session.commit()
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("project_geospatial_association")
    # ### end Alembic commands ###
