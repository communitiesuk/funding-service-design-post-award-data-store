"""empty message

Revision ID: 010_XXX_jsonb_migrate_test.
Revises: 009_postcode_as_array
Create Date: 2024-01-24 11:27:35.340543

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy import orm, text
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "010_XXX_jsonb_migrate_test"
down_revision = "009_postcode_as_array"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    # Update existing rows with JSON data
    connection = op.get_bind()
    session = orm.Session(bind=connection)

    with op.batch_alter_table("funding", schema=None) as batch_op:
        batch_op.add_column(sa.Column("json_blob", postgresql.JSONB(astext_type=sa.Text()), nullable=True))

    session.flush()

    sql_query = text(
        """
        UPDATE funding
        SET json_blob = json_build_object(
            'start_date', to_jsonb(funding.start_date),
            'end_date', to_jsonb(funding.end_date),
            'funding_source_name', funding.funding_source_name,
            'funding_source_type', funding.funding_source_type,
            'secured', funding.secured,
            'spend_for_reporting_period', funding.spend_for_reporting_period,
            'status', funding.status
        );
        """
    )

    connection.execute(sql_query)

    session.commit()
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("funding", schema=None) as batch_op:
        batch_op.drop_column("json_blob")

    # ### end Alembic commands ###
