openapi: 3.0.0

info:
  title: Sample API
  description: Optional multiline or single-line description in [CommonMark](http://commonmark.org/help/) or HTML.
  version: 0.1.9

paths:
  /download:
    get:
      operationId: core.controllers.download.download
      summary: Returns some data in the requested format.
      description: Takes a file format and returns some data in that format.
      parameters:
        - in: query
          name: file_format
          schema:
            type: string
            enum: [ json, xlsx ]
          required: true
          description: Specify the desired file format (json or xlsx)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  file_content:
                    type: object
                    description: The file content in json format.
            application/octet-stream:
              schema:
                type: string
                format: binary
                description: The file content in a binary format.

  /ingest:
    post:
      operationId: core.controllers.ingest.ingest
      summary: Ingests and validates an Excel file, returning any validation errors.
      description: Ingests an Excel file and validates it's structure and data types. Returns any validation errors that
        occur.
      requestBody:
        description: Excel file and data schema to ingest.
        required: True
        content:
          multipart/form-data:
            schema:
              $ref: 'components.yml#/components/schemas/Ingest'

      responses:
        '200':
          description: Success message
          content:
            application/json:
              schema:
                $ref: 'components.yml#/components/schemas/SpreadsheetIngested'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: 'components.yml#/components/schemas/GeneralError'
              example: { "detail": "Invalid file type",
                         "status": 400,
                         "title": "Bad Request",
                         "type": "about:blank" }

        '440':
          description: Validation Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: 'components.yml#/components/schemas/ValidationError'
              example: { "detail": "Invalid file type",
                         "status": 400,
                         "title": "Bad Request",
                         "type": "about:blank",
                         "validation_errors": [ "Sheet \"Project_Dim\" column \"Project_ID\" should contain only unique values.",
                                                "The following sheets contain no data: Empty Sheet." ] }

        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: 'components.yml#/components/schemas/GeneralError'
              example: { "detail": "Internal Ingestion Error",
                         "status": 500,
                         "title": "Internal Server Error",
                         "type": "about:blank" }

  /organisations:
    get:
      summary: Returns a list of all distinct organisation names.
      operationId: core.controllers.get_filters.get_organisation_names
      responses:
        '200':
          description: The names of all organisations and UUID
          content:
            application/json:
              schema:
                $ref: 'components.yml#/components/schemas/OrganisationData'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: 'components.yml#/components/schemas/GeneralError'

  /funds:
    get:
      summary: Returns a list of all distinct funds.
      operationId: core.controllers.get_filters.get_funds
      responses:
        '200':
          description: The names of all funds and their IDs
          content:
            application/json:
              schema:
                $ref: 'components.yml#/components/schemas/FundData'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: 'components.yml#/components/schemas/GeneralError'
