openapi: 3.0.0

info:
  title: Sample API
  description: Optional multiline or single-line description in [CommonMark](http://commonmark.org/help/) or HTML.
  version: 0.1.9

paths:
  /download:
    get:
      operationId: core.controllers.download.download
      summary: Returns some data in the requested format.
      description: Takes a file format and returns some data in that format.
      parameters:
        - in: query
          name: file_format
          schema:
            type: string
            enum: [ json, xlsx ]
          required: true
          description: Specify the desired file format (json or xlsx)
        - in: query
          name: funds
          example: [ "FHSF" ]
          description: A list of fund ids
          schema:
            type: array
            items:
              type: string
        - in: query
          name: organisations
          example: [ "2a8baca6-5203-4fa5-be23-8b7797f111f7" ]
          description: A list of UUIDs that match organisations
          schema:
            type: array
            items:
              type: string
              format: uuid
        - in: query
          name: regions
          example: [ "TLC", "TLD", "TLK" ]
          description: A list of ITL regions.
          schema:
            type: array
            items:
              type: string
        - in: query
          name: rp_start
          description: Reporting Period Start
          example: "2022-12-31T23:59:59Z"
          schema:
            type: string
            format: date-time
        - in: query
          name: rp_end
          description: Reporting Period End
          example: "2023-06-02T14:30:00Z"
          schema:
            type: string
            format: date-time
        - in: query
          name: outcome_categories
          description: A list of outcome categories
          example: [ "Transport", "Culture", "Economy" ]
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  file_content:
                    type: object
                    description: The file content in json format.
            application/octet-stream:
              schema:
                type: string
                format: binary
                description: The file content in a binary format.

  /ingest:
    post:
      operationId: core.controllers.ingest.ingest
      summary: Ingests and validates an Excel file, returning any validation errors.
      description: Ingests an Excel file and validates it's structure and data types. Returns any validation errors that
        occur.
      requestBody:
        description: Excel file and data schema to ingest.
        required: True
        content:
          multipart/form-data:
            schema:
              $ref: 'components.yml#/components/schemas/Ingest'

      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: 'components.yml#/components/schemas/SpreadsheetIngested'

        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: 'components.yml#/components/schemas/GeneralError'
                  - $ref: 'components.yml#/components/schemas/ValidationError'
                  - $ref: 'components.yml#/components/schemas/PreTransformationError'
              examples:
                BadRequest:
                  value:
                    detail: "Invalid file type"
                    status: 400
                    title: "Bad Request"
                    type: "about:blank"
                TabErrors:
                  value:
                    detail: "Workbook validation failed"
                    validation_errors:
                      tab:
                        "Tab1"
                      section:
                        "Tab Section 1"
                      cell:
                        "A1"
                      description:
                        "Error message 1"
                    status: 400
                    title: "Bad Request"
                PreTransformationErrors:
                  value:
                    detail: "Workbook validation failed"
                    validation_errors:
                      PreTransformationErrors:
                        [ "Error Message 1",
                          "Error Message 2" ]
                    status: 400
                    title: "Bad Request"

        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: 'components.yml#/components/schemas/GeneralError'
              example:
                value:
                  detail: "Internal Ingestion Error"
                  status: 500
                  title: "Internal Server Error"
                  type: "about:blank"

  /organisations:
    get:
      summary: Returns a list of all distinct organisation names.
      operationId: core.controllers.get_filters.get_organisation_names
      responses:
        '200':
          description: The names of all organisations and UUID
          content:
            application/json:
              schema:
                $ref: 'components.yml#/components/schemas/OrganisationData'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: 'components.yml#/components/schemas/GeneralError'

  /funds:
    get:
      summary: Returns a list of all distinct funds.
      operationId: core.controllers.get_filters.get_funds
      responses:
        '200':
          description: The names of all funds and their IDs
          content:
            application/json:
              schema:
                $ref: 'components.yml#/components/schemas/FundData'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: 'components.yml#/components/schemas/GeneralError'

  /outcome-categories:
    get:
      summary: Returns a list of all distinct outcome categories.
      operationId: core.controllers.get_filters.get_outcome_categories
      responses:
        '200':
          description: The names of all outcome categories
          content:
            application/json:
              schema:
                $ref: 'components.yml#/components/schemas/OutcomeCategoryData'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: 'components.yml#/components/schemas/GeneralError'

  /regions:
    get:
      summary: Returns a list of all distinct ITL regions as codes.
      operationId: core.controllers.get_filters.get_regions
      responses:
        '200':
          description: The codes for all distinct ITL regions.
          content:
            application/json:
              schema:
                $ref: 'components.yml#/components/schemas/RegionData'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: 'components.yml#/components/schemas/GeneralError'

  /reporting-period-range:
    get:
      summary: Returns the start and end date reporting period in date-time format e.g. 2025-06-30T00:00:00Z
      operationId: core.controllers.get_filters.get_reporting_period_range
      responses:
        '200':
          description: Returns the earliest reporting period start date and the latest reporting period end date in the data
          content:
            application/json:
              schema:
                $ref: 'components.yml#/components/schemas/ReportingPeriodRangeData'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: 'components.yml#/components/schemas/GeneralError'

  /failed-submission/{failure_uuid}:
    get:
      summary: Returns a failed submission from S3 storage that matches the provided failure id.
      operationId: core.controllers.misc.get_failed_submission
      parameters:
        - in: path
          name: failure_uuid
          required: true
          schema:
            type: string
            format: uuid
          description: The failure id corresponding to the failed submission to retrieve.
      responses:
        '200':
          description: Success
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: 'components.yml#/components/schemas/GeneralError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: 'components.yml#/components/schemas/GeneralError'
