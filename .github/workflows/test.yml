name: Run tests
on: [push]
jobs:
  run_tests:
    name: Unit tests
    runs-on: ubuntu-latest
    services:
      postgres:
        # Docker Hub image
        image: postgres:16.2
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: password
          POSTGRES_DB: data_store_test
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
      localstack:
        image: localstack/localstack:3.2
        env:
          # these match the values in config/unit_test.py
          AWS_REGION: eu-central-1
          AWS_ACCESS_KEY_ID: test
          AWS_SECRET_ACCESS_KEY: test
        ports:
          - 4566:4566
          - 4571:4571
        options: --health-cmd="curl http://localhost:4566/health" --health-interval=10s --health-timeout=10s --health-retries=10
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip' # caching pip dependencies
    - name: Install dependencies
      run: pip install -r requirements-dev.txt
    - name: Run tests
      run: pytest tests
  check_db:
    name: Check DB migrations
    runs-on: ubuntu-latest
    services:
      postgres:
        # Docker Hub image
        image: postgres:16.2
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: password
          POSTGRES_DB: data_store_test
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip' # caching pip dependencies
    - name: Install dependencies
      run: pip install -r requirements-dev.txt
    - name: Check DB is up to date
      env:
        FLASK_ENV: unit_test
      run: flask db upgrade && flask db check
  type_checks:
    name: Type checks
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip' # caching pip dependencies
    - name: Install dependencies
      run: pip install -r requirements-dev.txt
    - uses: pre-commit/action@v3.0.1
      with:
        extra_args: mypy --all-files
