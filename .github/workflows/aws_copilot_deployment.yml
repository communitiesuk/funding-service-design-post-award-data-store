name: Reusable workflow for post-award AWS Copilot deployment
run-name: Deploy branch ${{ github.ref_name }} to ${{ inputs.copilot_environment || 'test' }} (${{ format('SHA:{0}', github.sha) }})
on:
  workflow_call:
    inputs:
        copilot_environment:
            description: "Copilot environment to deploy to"
            type: string
            required: true
        image_location:
            description: "Location of the image to deploy"
            type: string
            required: true
        run_e2e_tests:
            description: "Run end-to-end (browser) tests; only works for the `dev` and `test` environments"
            type: boolean
            default: true
            required: false

jobs:
  migrate:
    name: Migrate DB in ${{ inputs.copilot_environment || 'test' }}
    permissions:
      id-token: write # This is required for requesting the JWT
      contents: read  # This is required for actions/checkout
    runs-on: ubuntu-latest
    environment: ${{ inputs.copilot_environment || 'test' }}
    steps:
      - name: Git clone the repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Setup Copilot
        uses: communitiesuk/funding-service-design-workflows/.github/actions/copilot_setup@main
        with:
          copilot_environment: ${{ inputs.copilot_environment || 'test' }}
          AWS_ACCOUNT: ${{ secrets.AWS_ACCOUNT }}

      - name: Inject env specific values into manifest
        run: |
          yq -i '.variables.GITHUB_SHA = "${{ github.sha }}"'  copilot/post-award/manifest.yml
          yq -i '.image.location = "${{ inputs.image_location }}"' copilot/post-award/manifest.yml

      - name: Run database migrations
        run: scripts/migration-task-script.py ${{ inputs.copilot_environment || 'test' }} ${{ inputs.image_location }}

  deploy:
    name: ${{ matrix.deployment }}
    needs: [ migrate ]
    strategy:
      fail-fast: false
      matrix:
        include:
          - deployment: post-award
            command: svc
          - deployment: post-award-celery
            command: svc
          - deployment: download-report
            command: job
    permissions:
      id-token: write # This is required for requesting the JWT
      contents: read  # This is required for actions/checkout
    runs-on: ubuntu-latest
    environment: ${{ inputs.copilot_environment || 'test' }}
    steps:
      - name: Git clone the repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Setup Copilot
        uses: communitiesuk/funding-service-design-workflows/.github/actions/copilot_setup@main
        with:
          copilot_environment: ${{ inputs.copilot_environment || 'test' }}
          AWS_ACCOUNT: ${{ secrets.AWS_ACCOUNT }}

      - name: Inject env specific values into manifest
        run: |
          yq -i '.variables.GITHUB_SHA = "${{ github.sha }}"'  copilot/${{ matrix.deployment }}/manifest.yml
          yq -i '.image.location = "${{ inputs.image_location }}"' copilot/${{ matrix.deployment }}/manifest.yml

      - name: Copilot deploy ${{ matrix.deployment }}
        run: |
          copilot ${{ matrix.command }} deploy --name ${{ matrix.deployment }}

  e2e_test:
    # Do not run these against the prod environment without addressing the auth/JWT self-signing done by e2e tests.
    if: ${{ inputs.run_e2e_tests == true && (inputs.copilot_environment == 'dev' || inputs.copilot_environment == 'test') }}
    name: Run end-to-end (browser) tests
    needs: [ migrate, deploy ]
    uses: ./.github/workflows/test_e2e.yml
    with:
      copilot_environment: test
    secrets: inherit

  notify_slack:
    needs:
      - migrate
      - deploy
      - e2e_test
    if: ${{ always() && !cancelled() && inputs.copilot_environment != 'dev' && (needs.migrate.result == 'failure' || needs.deploy.result == 'failure' || needs.e2e_test.result == 'failure') }}
    uses: communitiesuk/funding-service-design-workflows/.github/workflows/notify-slack-deployment-failed.yml@main
    with:
      app_name: post-award
      env_name: ${{ inputs.copilot_environment }}
      github_username: ${{ github.actor }}
      workflow_url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
      compare_url: ${{ github.event_name == 'push' && github.event.compare || null }}
    secrets:
      SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      SLACK_NOTIFICATION_CHANNEL_ID: ${{ secrets.SLACK_NOTIFICATION_CHANNEL_ID }}
