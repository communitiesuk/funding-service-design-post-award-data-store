name: Reusable workflow for post-award AWS Copilot deployment
run-name: Deploy branch ${{ github.ref_name }} to ${{ inputs.copilot_environment || 'test' }} (${{ format('SHA:{0}', github.sha) }})
on:
  workflow_call:
    inputs:
        copilot_environment:
            description: "Copilot environment to deploy to"
            type: string
            required: true
        image_location:
            description: "Location of the image to deploy"
            type: string
            required: true

jobs:
  deploy:
    name: ${{ matrix.deployment }}
    strategy:
      matrix:
        include:
          - deployment: post-award
            command: svc
          - deployment: post-award-celery
            command: svc
          - deployment: download-report
            command: job
    permissions:
      id-token: write # This is required for requesting the JWT
      contents: read  # This is required for actions/checkout
    runs-on: ubuntu-latest
    environment: ${{ inputs.copilot_environment || 'test' }}
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v4

      - name: Setup Copilot
        uses: communitiesuk/funding-service-design-workflows/.github/actions/copilot_setup@main
        with:
          copilot_environment: ${{ inputs.copilot_environment || 'test' }}
          AWS_ACCOUNT: ${{ secrets.AWS_ACCOUNT }}

      - name: Inject env specific values into manifest
        run: |
          yq -i '.variables.GITHUB_SHA = "${{ github.sha }}"'  copilot/${{ matrix.deployment }}/manifest.yml
          yq -i '.image.location = "${{ inputs.image_location }}"' copilot/${{ matrix.deployment }}/manifest.yml

      - name: Run database migrations
        if: ${{ matrix.deployment == 'post-award' }}
        run: scripts/migration-task-script.py ${{ inputs.copilot_environment || 'test' }} ${{ inputs.image_location }}

      - name: Copilot deploy ${{ matrix.deployment }}
        run: |
          copilot ${{ matrix.command }} deploy --name ${{ matrix.deployment }}
