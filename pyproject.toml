[tool.ruff]
line-length = 120

target-version = "py311"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle
    "W",  # pycodestyle
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C90",  # mccabe cyclomatic complexity
    "G",  # flake8-logging-format
]
ignore = []
exclude = [
    "db/migrations/versions/",
    "venv*",
    ".venv*",
    "__pycache__",
]
mccabe.max-complexity = 12


[tool.mypy]
python_version = "3.11"

# Start off with these
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true

# Getting these passing should be easy
strict_equality = true

# Strongly recommend enabling this one as soon as you can
check_untyped_defs = false

# These shouldn't be too much additional work, but may be tricky to
# get passing if you use a lot of untyped libraries
disallow_subclassing_any = false
disallow_untyped_decorators = false
disallow_any_generics = false

# These next few are various gradations of forcing use of type annotations
disallow_untyped_calls = false
disallow_incomplete_defs = false
disallow_untyped_defs = false

# This one isn't too hard to get passing, but return on investment is lower
no_implicit_reexport = false

# This one can be tricky to get passing if you use a lot of untyped libraries
warn_return_any = false

# MyPy just says these are "extra checks that are technically correct but may be inpractical in real code"
# We can try this out and if it's too difficult, we can leave it disabled.
extra_checks = true

# If all of the above options are enabled, we should be able to just turn on `strict` mode
strict = false


[[tool.mypy.overrides]]
module = [
  "flask_assets",
  "fsd_utils.*",
  "notifications_python_client.*",
  "flask_wtf",
  "govuk_frontend_wtf.wtforms_widgets",
]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = [
  "app.*",
  "config.*",
  "data_store.*",
  "scripts.*",
  "tests.*",
]
disable_error_code = ["import-untyped", "name-defined", "attr-defined", "import-not-found", "index"]

[[tool.mypy.overrides]]
module = "data_store/db/queries"
disable_error_code = ["arg-type"]

[[tool.mypy.overrides]]
module = "data_store.messaging.messaging"
disable_error_code = ["union-attr"]

[[tool.mypy.overrides]]
module = "data_store.messaging.tf_messaging"
disable_error_code = ["call-overload", "arg-type"]

[[tool.mypy.overrides]]
module = "data_store/serialisation/data_serialiser"
disable_error_code = ["arg-type"]

[[tool.mypy.overrides]]
module = "data_store/table_extraction/extract"
disable_error_code = ["misc", "return-value"]

[[tool.mypy.overrides]]
module = "data_store/table_extraction/process"
disable_error_code = ["arg-type", "assignment", "call-overload", "operator", "return-value", "misc"]

[[tool.mypy.overrides]]
module = "data_store/transformation.*"
disable_error_code = ["assignment", "union-attr"]

[[tool.mypy.overrides]]
module = "data_store/transformation/towns_fund/tf_transform_r3"
disable_error_code = ["operator", "arg-type", "call-overload", "used-before-def"]

[[tool.mypy.overrides]]
module = "data_store.util"
disable_error_code = ["operator", "union-attr"]

[[tool.mypy.overrides]]
module = "data_store/validation/pathfinders/cross_table_validation/common"
disable_error_code = ["arg-type", "return-value"]

[[tool.mypy.overrides]]
module = "data_store/validation/pathfinders/cross_table_validation/ct_validate_r1"
disable_error_code = ["arg-type", "operator", "union-attr"]

[[tool.mypy.overrides]]
module = "data_store/validation/towns_fund/fund_specific_validation/fs_validate_r4"
disable_error_code = ["arg-type", "assignment"]

[[tool.mypy.overrides]]
module = "data_store/validation/towns_fund/schema_validation/validate"
disable_error_code = ["arg-type", "operator", "return-value"]

[[tool.mypy.overrides]]
module = "scripts.validate"
disable_error_code = ["import-not-found"]

[[tool.mypy.overrides]]
module = "tests/data_store_tests/transformation_tests/pathfinders/test_pf_transform_r1"
disable_error_code = ["arg-type"]

[[tool.mypy.overrides]]
module = "tests/data_store_tests/validation_tests/pathfinders/schema_validation_tests/test_pf_schema_validate"
disable_error_code = ["arg-type", "assignment"]
